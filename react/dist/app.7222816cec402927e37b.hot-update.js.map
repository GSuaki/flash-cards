{"version":3,"sources":["webpack:///./pages/Collection/components/CollectionCard/CollectionCard.js"],"names":["formatAbout","val","length","substring","concat","CollectionCard","props","clickListener","bind","item","title","description","collectionId","id","fetchCards","then","history","push","mapStateToProps","mapDispatchToProps"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AACA;;AACA;;AAEA;;;;AACA;;;;;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc;AAAA,MAACC,GAAD,uEAAO,EAAP;AAAA,SAAcA,IAAIC,MAAJ,GAAa,GAAb,GAAmBD,IAAIE,SAAJ,CAAc,CAAd,EAAiB,GAAjB,EAAsBC,MAAtB,CAA6B,KAA7B,CAAnB,GAAyDH,GAAvE;AAAA,CAApB;;IAEMI,c;;;AAEJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACXA,KADW;;AAGjB,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AAHiB;AAIlB;;;;oCAEe;AAAA,wBACsB,KAAKF,KAAL,CAAWG,IADjC;AAAA,UACNC,KADM,eACNA,KADM;AAAA,8CACCC,WADD;AAAA,UACCA,WADD,yCACe,EADf;;;AAGd,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA,YAAI,WAAU,YAAd;AAA6BD;AAA7B,SADF;AAEE;AAAA;AAAA,YAAG,WAAU,WAAb;AAA2BC;AAA3B,SAFF;AAGE;AAAA;AAAA,YAAG,MAAK,GAAR,EAAY,WAAU,iBAAtB;AAAA;AAAA;AAHF,OADF;AAOD;;;oCAEe;AAAA;;AACd,UAAMC,eAAe,KAAKN,KAAL,CAAWG,IAAX,CAAgBI,EAArC;AACA,WAAKP,KAAL,CAAWQ,UAAX,CAAsBF,YAAtB,EACGG,IADH,CACQ;AAAA,eAAM,OAAKT,KAAL,CAAWU,OAAX,CAAmBC,IAAnB,mBAAwCL,YAAxC,kBAAN;AAAA,OADR;AAED;;;;;;AAGH,IAAMM,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU,EAAV;AAAA,CAAxB;;AAEA,IAAMC,qBAAqB;AACzBL;AADyB,CAA3B;;kBAIe,6CAEb,yBAASI,eAAT,EAA0BC,kBAA1B,CAFa,EAGZd,cAHY,C","file":"app.7222816cec402927e37b.hot-update.js","sourcesContent":["import React, { Component } from 'react'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\nimport { withRouter } from 'react-router'\n\nimport Card from '../../../../components/Card/Card'\nimport { fetchCards } from '../../../../store/flashcard/actions'\n\nconst formatAbout = (val = '') => val.length > 100 ? val.substring(0, 100).concat('...') : val;\n\nclass CollectionCard extends Card {\n\n  constructor(props) {\n    super(props);\n\n    this.clickListener = this.clickListener.bind(this)\n  }\n\n  renderContent() {\n    const { title, description = '' } = this.props.item;\n\n    return (\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{ title }</h5>\n        <p className=\"card-text\">{ description }</p>\n        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n      </div>\n    );\n  }\n\n  clickListener() {\n    const collectionId = this.props.item.id\n    this.props.fetchCards(collectionId)\n      .then(() => this.props.history.push(`/collections/${collectionId}/flash-cards`))\n  }\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = {\n  fetchCards\n}\n\nexport default compose(\n  withRouter, \n  connect( mapStateToProps, mapDispatchToProps )\n)( CollectionCard );"],"sourceRoot":""}
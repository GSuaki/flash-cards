{"version":3,"sources":["webpack:///./pages/Collection/components/CollectionCard/CollectionCard.js","webpack:///./services/FlashCardService.js","webpack:///./store/flashcard/actions.js"],"names":["formatAbout","val","length","substring","concat","CollectionCard","props","clickListener","bind","item","title","description","fetchCards","id","mapStateToProps","mapDispatchToProps","fetch","collectionId","client","method","contentType","url","then","resp","data","console","log","dispatch","type","payload"],"mappings":";;;;;;;;;;;;;;;;;;AAAA;;;;AACA;;AAEA;;;;AACA;;;;;;;;;;AAEA,IAAMA,cAAc,SAAdA,WAAc;AAAA,MAACC,GAAD,uEAAO,EAAP;AAAA,SAAcA,IAAIC,MAAJ,GAAa,GAAb,GAAmBD,IAAIE,SAAJ,CAAc,CAAd,EAAiB,GAAjB,EAAsBC,MAAtB,CAA6B,KAA7B,CAAnB,GAAyDH,GAAvE;AAAA,CAApB;;IAEMI,c;;;AAEJ,0BAAYC,KAAZ,EAAmB;AAAA;;AAAA,gIACXA,KADW;;AAGjB,UAAKC,aAAL,GAAqB,MAAKA,aAAL,CAAmBC,IAAnB,OAArB;AAHiB;AAIlB;;;;oCAEe;AAAA,wBACsB,KAAKF,KAAL,CAAWG,IADjC;AAAA,UACNC,KADM,eACNA,KADM;AAAA,8CACCC,WADD;AAAA,UACCA,WADD,yCACe,EADf;;;AAGd,aACE;AAAA;AAAA,UAAK,WAAU,WAAf;AACE;AAAA;AAAA,YAAI,WAAU,YAAd;AAA6BD;AAA7B,SADF;AAEE;AAAA;AAAA,YAAG,WAAU,WAAb;AAA2BC;AAA3B,SAFF;AAGE;AAAA;AAAA,YAAG,MAAK,GAAR,EAAY,WAAU,iBAAtB;AAAA;AAAA;AAHF,OADF;AAOD;;;oCAEe;AACd,WAAKL,KAAL,CAAWM,UAAX,CAAsB,KAAKN,KAAL,CAAWG,IAAX,CAAgBI,EAAtC;AACD;;;;;;AAGH,IAAMC,kBAAkB,SAAlBA,eAAkB;AAAA,SAAU,EAAV;AAAA,CAAxB;;AAEA,IAAMC,qBAAqB;AACzBH;AADyB,CAA3B;;kBAIe,yBAAQE,eAAR,EAAyBC,kBAAzB,EAA6CV,cAA7C,C;;;;;;;;;;;;;;;;;QClCCW,K,GAAAA,K;;AALhB;;;;;;AAEA;;;AAGO,SAASA,KAAT,CAAeC,YAAf,EAA6B;AAClC,MAAMC,SAAS,2BAAf;AACA,SAAOA,OAAO;AACZC,YAAQ,KADI;AAEZC,iBAAa,iCAFD;AAGZC,yCAAmCJ;AAHvB,GAAP,EAKNK,IALM,CAKD;AAAA,WAAQC,KAAKC,IAAb;AAAA,GALC,CAAP;AAMD;;AAED;;;kBAGe;AACbR;AADa,C;;;;;;;;;;;;;;;;;;;AClBf;;AAEA;;;;;;AAEO,IAAMJ,kCAAa,SAAbA,UAAa,CAACK,YAAD,EAAkB;AAC1CQ,UAAQC,GAAR;AACA,SAAO;AAAA,WAAY,2BAAiBV,KAAjB,CAAuBC,YAAvB,EAChBK,IADgB,CACX,mBAAW;AACfK,eAAS,EAAEC,iCAAF,EAA4BC,gBAA5B,EAAT;AACA,aAAOA,OAAP;AACD,KAJgB,CAAZ;AAAA,GAAP;AAKD,CAPM;;kBASQ;AACbjB;AADa,C","file":"app.7bff6c77925765593829.hot-update.js","sourcesContent":["import React, { Component } from 'react'\nimport { connect } from 'react-redux'\n\nimport Card from '../../../../components/Card/Card'\nimport { fetchCards } from '../../../../store/flashcard/actions'\n\nconst formatAbout = (val = '') => val.length > 100 ? val.substring(0, 100).concat('...') : val;\n\nclass CollectionCard extends Card {\n\n  constructor(props) {\n    super(props);\n\n    this.clickListener = this.clickListener.bind(this)\n  }\n\n  renderContent() {\n    const { title, description = '' } = this.props.item;\n\n    return (\n      <div className=\"card-body\">\n        <h5 className=\"card-title\">{ title }</h5>\n        <p className=\"card-text\">{ description }</p>\n        <a href=\"#\" className=\"btn btn-primary\">Go somewhere</a>\n      </div>\n    );\n  }\n\n  clickListener() {\n    this.props.fetchCards(this.props.item.id)\n  }\n}\n\nconst mapStateToProps = state => ({})\n\nconst mapDispatchToProps = {\n  fetchCards\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CollectionCard);","import restClient from './RestClient'\n\n/**\n * Methods\n */\nexport function fetch(collectionId) {\n  const client = restClient()\n  return client({\n    method: 'get',\n    contentType: \"application/json; charset=utf-8\",\n    url: `/flash-cards?collection_id=${collectionId}`\n  })\n  .then(resp => resp.data);\n}\n\n/**\n * Expose Service\n */\nexport default {\n  fetch\n};","import { FLASHCARD_RESPONSE } from '../actions'\n\nimport FlashCardService from '../../services/FlashCardService'\n\nexport const fetchCards = (collectionId) => {\n  console.log(`Fetching flash-cards...`)\n  return dispatch => FlashCardService.fetch(collectionId)\n    .then(payload => {\n      dispatch({ type: FLASHCARD_RESPONSE, payload })\n      return payload\n    })\n}\n\nexport default {\n  fetchCards\n}"],"sourceRoot":""}